package transactions

import (
	"github.com/ledgerwatch/erigon-lib/common"
	"github.com/ledgerwatch/erigon-lib/common/hexutil"
	"github.com/ledgerwatch/erigon-lib/common/hexutility"
	"github.com/ledgerwatch/erigon/accounts/abi"
	"github.com/ledgerwatch/erigon/turbo/adapter/ethapi"
	"strings"
)

var (
	_jsondata = `
[
	{
		"inputs": [
			{
				"internalType": "bytes",
				"name": "data",
				"type": "bytes"
			}
		],
		"name": "_decodeBalance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "pure",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "tokens",
				"type": "address[]"
			}
		],
		"name": "balance",
		"outputs": [
			{
				"internalType": "bool[]",
				"name": "",
				"type": "bool[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "tokens",
				"type": "address[]"
			},
			{
				"internalType": "address[][]",
				"name": "users",
				"type": "address[][]"
			}
		],
		"name": "tokenBalance",
		"outputs": [
			{
				"internalType": "uint256[][]",
				"name": "",
				"type": "uint256[][]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "tokens",
				"type": "address[]"
			}
		],
		"name": "tokenInfo",
		"outputs": [
			{
				"internalType": "string[]",
				"name": "",
				"type": "string[]"
			},
			{
				"internalType": "string[]",
				"name": "",
				"type": "string[]"
			},
			{
				"internalType": "bytes[]",
				"name": "",
				"type": "bytes[]"
			},
			{
				"internalType": "bytes[]",
				"name": "",
				"type": "bytes[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
`
	_deployCode          = "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806328523bc3146100515780636f28a81214610081578063cadda4ba146100b4578063dfca5f24146100e4575b600080fd5b61006b60048036038101906100669190610eff565b610114565b60405161007891906113a6565b60405180910390f35b61009b60048036038101906100969190610ebe565b610455565b6040516100ab94939291906113ea565b60405180910390f35b6100ce60048036038101906100c99190610ebe565b610b91565b6040516100db91906113c8565b60405180910390f35b6100fe60048036038101906100f99190610f6b565b610d2c565b60405161010b919061146d565b60405180910390f35b606080835167ffffffffffffffff8111801561012f57600080fd5b5060405190808252806020026020018201604052801561016357816020015b606081526020019060019003908161014e5790505b50905060005b845181101561044a57606084828151811061018057fe5b602002602001015190506060815167ffffffffffffffff811180156101a457600080fd5b506040519080825280602002602001820160405280156101d35781602001602082028036833780820191505090505b50905060005b825181101561042257600060608986815181106101f257fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1685848151811061021c57fe5b6020026020010151604051602401610234919061138b565b6040516020818303038152906040527f70a08231000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102be9190611374565b600060405180830381855afa9150503d80600081146102f9576040519150601f19603f3d011682016040523d82523d6000602084013e6102fe565b606091505b509150915081156103f85760008151141561033257600084848151811061032157fe5b6020026020010181815250506103f3565b3073ffffffffffffffffffffffffffffffffffffffff1663dfca5f24826040518263ffffffff1660e01b815260040161036b919061144b565b60206040518083038186803b15801561038357600080fd5b505afa9250505080156103b457506040513d601f19601f820116820180604052508101906103b19190610fac565b60015b6103d75760008484815181106103c657fe5b6020026020010181815250506103f2565b808585815181106103e457fe5b602002602001018181525050505b5b610413565b600084848151811061040657fe5b6020026020010181815250505b505080806001019150506101d9565b508084848151811061043057fe5b602002602001018190525050508080600101915050610169565b508091505092915050565b6060806060806060855167ffffffffffffffff8111801561047557600080fd5b506040519080825280602002602001820160405280156104a957816020015b60608152602001906001900390816104945790505b5090506060865167ffffffffffffffff811180156104c657600080fd5b506040519080825280602002602001820160405280156104fa57816020015b60608152602001906001900390816104e55790505b5090506060875167ffffffffffffffff8111801561051757600080fd5b5060405190808252806020026020018201604052801561054b57816020015b60608152602001906001900390816105365790505b5090506060885167ffffffffffffffff8111801561056857600080fd5b5060405190808252806020026020018201604052801561059c57816020015b60608152602001906001900390816105875790505b5090506000606060005b8b51811015610b775760008c82815181106105bd57fe5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f06fdde03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161066e9190611374565b600060405180830381855afa9150503d80600081146106a9576040519150601f19603f3d011682016040523d82523d6000602084013e6106ae565b606091505b50809450819550505083156106f957826040516020016106ce9190611374565b6040516020818303038152906040528883815181106106e957fe5b6020026020010181905250610721565b6040518060200160405280600081525088838151811061071557fe5b60200260200101819052505b8073ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f95d89b41000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107c89190611374565b600060405180830381855afa9150503d8060008114610803576040519150601f19603f3d011682016040523d82523d6000602084013e610808565b606091505b508094508195505050831561085357826040516020016108289190611374565b60405160208183030381529060405287838151811061084357fe5b602002602001018190525061087b565b6040518060200160405280600081525087838151811061086f57fe5b60200260200101819052505b8073ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f313ce567000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109229190611374565b600060405180830381855afa9150503d806000811461095d576040519150601f19603f3d011682016040523d82523d6000602084013e610962565b606091505b508094508195505050831561098e578286838151811061097e57fe5b60200260200101819052506109f2565b600067ffffffffffffffff811180156109a657600080fd5b506040519080825280601f01601f1916602001820160405280156109d95781602001600182028036833780820191505090505b508683815181106109e657fe5b60200260200101819052505b8073ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f18160ddd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610a999190611374565b600060405180830381855afa9150503d8060008114610ad4576040519150601f19603f3d011682016040523d82523d6000602084013e610ad9565b606091505b5080945081955050508315610b055782858381518110610af557fe5b6020026020010181905250610b69565b600067ffffffffffffffff81118015610b1d57600080fd5b506040519080825280601f01601f191660200182016040528015610b505781602001600182028036833780820191505090505b50858381518110610b5d57fe5b60200260200101819052505b5080806001019150506105a6565b508585858599509950995099505050505050509193509193565b606080825167ffffffffffffffff81118015610bac57600080fd5b50604051908082528060200260200182016040528015610bdb5781602001602082028036833780820191505090505b50905060005b8351811015610d22576000848281518110610bf857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1630604051602401610c27919061138b565b6040516020818303038152906040527f70a08231000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610cb19190611374565b600060405180830381855afa9150503d8060008114610cec576040519150601f19603f3d011682016040523d82523d6000602084013e610cf1565b606091505b5050905080838381518110610d0257fe5b602002602001019015159081151581525050508080600101915050610be1565b5080915050919050565b600081806020019051810190610d429190610fac565b9050919050565b600081359050610d588161173d565b92915050565b600082601f830112610d6f57600080fd5b8135610d82610d7d826114b5565b611488565b91508181835260208401935060208101905083856020840282011115610da757600080fd5b60005b83811015610dd75781610dbd8882610d49565b845260208401935060208301925050600181019050610daa565b5050505092915050565b600082601f830112610df257600080fd5b8135610e05610e00826114dd565b611488565b9150818183526020840193506020810190508360005b83811015610e4b5781358601610e318882610d5e565b845260208401935060208301925050600181019050610e1b565b5050505092915050565b600082601f830112610e6657600080fd5b8135610e79610e7482611505565b611488565b91508082526020830160208301858383011115610e9557600080fd5b610ea08382846116ea565b50505092915050565b600081519050610eb881611754565b92915050565b600060208284031215610ed057600080fd5b600082013567ffffffffffffffff811115610eea57600080fd5b610ef684828501610d5e565b91505092915050565b60008060408385031215610f1257600080fd5b600083013567ffffffffffffffff811115610f2c57600080fd5b610f3885828601610d5e565b925050602083013567ffffffffffffffff811115610f5557600080fd5b610f6185828601610de1565b9150509250929050565b600060208284031215610f7d57600080fd5b600082013567ffffffffffffffff811115610f9757600080fd5b610fa384828501610e55565b91505092915050565b600060208284031215610fbe57600080fd5b6000610fcc84828501610ea9565b91505092915050565b6000610fe1838361120d565b905092915050565b6000610ff5838361126b565b60208301905092915050565b600061100d838361127a565b905092915050565b6000611021838361131d565b905092915050565b60006110358383611356565b60208301905092915050565b61104a816116a2565b82525050565b600061105b82611581565b611065818561160f565b93508360208202850161107785611531565b8060005b858110156110b357848403895281516110948582610fd5565b945061109f836115ce565b925060208a0199505060018101905061107b565b50829750879550505050505092915050565b60006110d08261158c565b6110da8185611620565b93506110e583611541565b8060005b838110156111165781516110fd8882610fe9565b9750611108836115db565b9250506001810190506110e9565b5085935050505092915050565b600061112e82611597565b6111388185611631565b93508360208202850161114a85611551565b8060005b8581101561118657848403895281516111678582611001565b9450611172836115e8565b925060208a0199505060018101905061114e565b50829750879550505050505092915050565b60006111a3826115a2565b6111ad8185611642565b9350836020820285016111bf85611561565b8060005b858110156111fb57848403895281516111dc8582611015565b94506111e7836115f5565b925060208a019950506001810190506111c3565b50829750879550505050505092915050565b6000611218826115ad565b6112228185611653565b935061122d83611571565b8060005b8381101561125e5781516112458882611029565b975061125083611602565b925050600181019050611231565b5085935050505092915050565b611274816116b4565b82525050565b6000611285826115b8565b61128f8185611664565b935061129f8185602086016116f9565b6112a88161172c565b840191505092915050565b60006112be826115b8565b6112c88185611675565b93506112d88185602086016116f9565b6112e18161172c565b840191505092915050565b60006112f7826115b8565b6113018185611686565b93506113118185602086016116f9565b80840191505092915050565b6000611328826115c3565b6113328185611691565b93506113428185602086016116f9565b61134b8161172c565b840191505092915050565b61135f816116e0565b82525050565b61136e816116e0565b82525050565b600061138082846112ec565b915081905092915050565b60006020820190506113a06000830184611041565b92915050565b600060208201905081810360008301526113c08184611050565b905092915050565b600060208201905081810360008301526113e281846110c5565b905092915050565b600060808201905081810360008301526114048187611198565b905081810360208301526114188186611198565b9050818103604083015261142c8185611123565b905081810360608301526114408184611123565b905095945050505050565b6000602082019050818103600083015261146581846112b3565b905092915050565b60006020820190506114826000830184611365565b92915050565b6000604051905081810181811067ffffffffffffffff821117156114ab57600080fd5b8060405250919050565b600067ffffffffffffffff8211156114cc57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156114f457600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561151c57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006116ad826116c0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156117175780820151818401526020810190506116fc565b83811115611726576000848401525b50505050565b6000601f19601f8301169050919050565b611746816116a2565b811461175157600080fd5b50565b61175d816116e0565b811461176857600080fd5b5056fea26469706673582212204c1b87cd147dcc37ee07fb264bc93d3929a71a312a48db470894d1d45b48222164736f6c634300060c0033"
	TokenContractCaller  = common.HexToAddress("0x1992111111111111111111111111111111111110")
	TokenContractAddress = common.HexToAddress("0x1992111111111111111111111111111111111111")
)

type TokenContract struct {
	caller  common.Address
	address common.Address
	code    []byte
	abi     abi.ABI
}

func NewTokenContract() TokenContract {
	_abi, _ := abi.JSON(strings.NewReader(_jsondata))
	return TokenContract{
		caller:  TokenContractCaller,
		address: TokenContractAddress,
		code:    hexutil.MustDecode(_deployCode),
		abi:     _abi,
	}
}

func (tc *TokenContract) Override() *ethapi.StateOverrides {
	return &ethapi.StateOverrides{
		tc.address: ethapi.Account{
			Nonce:     nil,
			Code:      (*hexutility.Bytes)(&tc.code),
			Balance:   nil,
			State:     nil,
			StateDiff: nil,
		},
	}
}
