package transactions

import (
	"github.com/ledgerwatch/erigon-lib/common"
	"github.com/ledgerwatch/erigon-lib/common/hexutil"
	"github.com/ledgerwatch/erigon-lib/common/hexutility"
	"github.com/ledgerwatch/erigon/accounts/abi"
	"github.com/ledgerwatch/erigon/turbo/adapter/ethapi"
	"strings"
)

var (
	_jsondata = `
[
	{
		"inputs": [
			{
				"internalType": "bytes",
				"name": "data",
				"type": "bytes"
			}
		],
		"name": "_decodeBalance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "pure",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "tokens",
				"type": "address[]"
			}
		],
		"name": "balance",
		"outputs": [
			{
				"internalType": "bool[]",
				"name": "",
				"type": "bool[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "tokens",
				"type": "address[]"
			},
			{
				"internalType": "address[][]",
				"name": "users",
				"type": "address[][]"
			}
		],
		"name": "tokenBalance",
		"outputs": [
			{
				"internalType": "uint256[][]",
				"name": "",
				"type": "uint256[][]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address[]",
				"name": "tokens",
				"type": "address[]"
			}
		],
		"name": "tokenInfo",
		"outputs": [
			{
				"internalType": "string[]",
				"name": "names",
				"type": "string[]"
			},
			{
				"internalType": "string[]",
				"name": "symbols",
				"type": "string[]"
			},
			{
				"internalType": "uint256[]",
				"name": "decimals",
				"type": "uint256[]"
			},
			{
				"internalType": "bool[]",
				"name": "hasDecimals",
				"type": "bool[]"
			},
			{
				"internalType": "uint256[]",
				"name": "totalSupplies",
				"type": "uint256[]"
			},
			{
				"internalType": "bool[]",
				"name": "hasTotalSupply",
				"type": "bool[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
`
	_deployCode          = "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806328523bc3146100515780636f28a81214610081578063cadda4ba146100b6578063dfca5f24146100e6575b600080fd5b61006b6004803603810190610066919061129e565b610116565b6040516100789190611722565b60405180910390f35b61009b6004803603810190610096919061125d565b61045d565b6040516100ad96959493929190611766565b60405180910390f35b6100d060048036038101906100cb919061125d565b610da8565b6040516100dd9190611744565b60405180910390f35b61010060048036038101906100fb919061130a565b610f49565b60405161010d9190611813565b60405180910390f35b606080835167ffffffffffffffff8111801561013157600080fd5b5060405190808252806020026020018201604052801561016557816020015b60608152602001906001900390816101505790505b50905060005b845181101561045257606084828151811061018257fe5b602002602001015190506060815167ffffffffffffffff811180156101a657600080fd5b506040519080825280602002602001820160405280156101d55781602001602082028036833780820191505090505b50905060005b825181101561042a57600060608986815181106101f457fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16631dcd650086858151811061022357fe5b602002602001015160405160240161023b9190611707565b6040516020818303038152906040527f70a08231000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102c591906116f0565b6000604051808303818686fa925050503d8060008114610301576040519150601f19603f3d011682016040523d82523d6000602084013e610306565b606091505b509150915081156104005760008151141561033a57600084848151811061032957fe5b6020026020010181815250506103fb565b3073ffffffffffffffffffffffffffffffffffffffff1663dfca5f24826040518263ffffffff1660e01b815260040161037391906117f1565b60206040518083038186803b15801561038b57600080fd5b505afa9250505080156103bc57506040513d601f19601f820116820180604052508101906103b9919061138c565b60015b6103df5760008484815181106103ce57fe5b6020026020010181815250506103fa565b808585815181106103ec57fe5b602002602001018181525050505b5b61041b565b600084848151811061040e57fe5b6020026020010181815250505b505080806001019150506101db565b508084848151811061043857fe5b60200260200101819052505050808060010191505061016b565b508091505092915050565b606080606080606080865167ffffffffffffffff8111801561047e57600080fd5b506040519080825280602002602001820160405280156104b257816020015b606081526020019060019003908161049d5790505b509550865167ffffffffffffffff811180156104cd57600080fd5b5060405190808252806020026020018201604052801561050157816020015b60608152602001906001900390816104ec5790505b509450865167ffffffffffffffff8111801561051c57600080fd5b5060405190808252806020026020018201604052801561054b5781602001602082028036833780820191505090505b509350865167ffffffffffffffff8111801561056657600080fd5b506040519080825280602002602001820160405280156105955781602001602082028036833780820191505090505b509250865167ffffffffffffffff811180156105b057600080fd5b506040519080825280602002602001820160405280156105df5781602001602082028036833780820191505090505b509150865167ffffffffffffffff811180156105fa57600080fd5b506040519080825280602002602001820160405280156106295781602001602082028036833780820191505090505b5090506000606060005b8951811015610d9c5760008a828151811061064a57fe5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff16631dcd65006040516024016040516020818303038152906040527f06fdde03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161070091906116f0565b6000604051808303818686fa925050503d806000811461073c576040519150601f19603f3d011682016040523d82523d6000602084013e610741565b606091505b50809450819550505083156107f1576020835114156107895760006020840151905061076c81610f66565b8b848151811061077857fe5b6020026020010181905250506107ec565b6020835111156107c357828060200190518101906107a7919061134b565b8a83815181106107b357fe5b60200260200101819052506107eb565b604051806020016040528060008152508a83815181106107df57fe5b60200260200101819052505b5b61083f565b6040518060400160405280600c81526020017f63657274696b2d66616c736500000000000000000000000000000000000000008152508a838151811061083357fe5b60200260200101819052505b8073ffffffffffffffffffffffffffffffffffffffff16631dcd65006040516024016040516020818303038152906040527f95d89b41000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108eb91906116f0565b6000604051808303818686fa925050503d8060008114610927576040519150601f19603f3d011682016040523d82523d6000602084013e61092c565b606091505b50809450819550505083156109dc576020835114156109745760006020840151905061095781610f66565b8a848151811061096357fe5b6020026020010181905250506109d7565b6020835111156109ae5782806020019051810190610992919061134b565b89838151811061099e57fe5b60200260200101819052506109d6565b604051806020016040528060008152508983815181106109ca57fe5b60200260200101819052505b5b610a2a565b6040518060400160405280600c81526020017f63657274696b2d66616c73650000000000000000000000000000000000000000815250898381518110610a1e57fe5b60200260200101819052505b8073ffffffffffffffffffffffffffffffffffffffff16631dcd65006040516024016040516020818303038152906040527f313ce567000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610ad691906116f0565b6000604051808303818686fa925050503d8060008114610b12576040519150601f19603f3d011682016040523d82523d6000602084013e610b17565b606091505b5080945081955050508315610ba1576001878381518110610b3457fe5b602002602001019015159081151581525050600083511415610b6f576000888381518110610b5e57fe5b602002602001018181525050610b9c565b82806020019051810190610b83919061138c565b888381518110610b8f57fe5b6020026020010181815250505b610bdc565b6000878381518110610baf57fe5b6020026020010190151590811515815250506000888381518110610bcf57fe5b6020026020010181815250505b8073ffffffffffffffffffffffffffffffffffffffff16631dcd65006040516024016040516020818303038152906040527f18160ddd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c8891906116f0565b6000604051808303818686fa925050503d8060008114610cc4576040519150601f19603f3d011682016040523d82523d6000602084013e610cc9565b606091505b5080945081955050508315610d53576001858381518110610ce657fe5b602002602001019015159081151581525050600083511415610d21576000868381518110610d1057fe5b602002602001018181525050610d4e565b82806020019051810190610d35919061138c565b868381518110610d4157fe5b6020026020010181815250505b610d8e565b6000858381518110610d6157fe5b6020026020010190151590811515815250506000868381518110610d8157fe5b6020026020010181815250505b508080600101915050610633565b50505091939550919395565b606080825167ffffffffffffffff81118015610dc357600080fd5b50604051908082528060200260200182016040528015610df25781602001602082028036833780820191505090505b50905060005b8351811015610f3f576000848281518110610e0f57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16631dcd650030604051602401610e439190611707565b6040516020818303038152906040527f70a08231000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610ecd91906116f0565b6000604051808303818686fa925050503d8060008114610f09576040519150601f19603f3d011682016040523d82523d6000602084013e610f0e565b606091505b5050905080838381518110610f1f57fe5b602002602001019015159081151581525050508080600101915050610df8565b5080915050919050565b600081806020019051810190610f5f919061138c565b9050919050565b606060005b60208160ff16108015610fb65750600060f81b838260ff1660208110610f8d57fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15610fc8578080600101915050610f6b565b60608160ff1667ffffffffffffffff81118015610fe457600080fd5b506040519080825280601f01601f1916602001820160405280156110175781602001600182028036833780820191505090505b50905060005b8260ff168160ff16101561108957848160ff166020811061103a57fe5b1a60f81b828260ff168151811061104d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061101d565b508092505050919050565b6000813590506110a381611ad6565b92915050565b600082601f8301126110ba57600080fd5b81356110cd6110c88261185b565b61182e565b915081818352602084019350602081019050838560208402820111156110f257600080fd5b60005b8381101561112257816111088882611094565b8452602084019350602083019250506001810190506110f5565b5050505092915050565b600082601f83011261113d57600080fd5b813561115061114b82611883565b61182e565b9150818183526020840193506020810190508360005b83811015611196578135860161117c88826110a9565b845260208401935060208301925050600181019050611166565b5050505092915050565b600082601f8301126111b157600080fd5b81356111c46111bf826118ab565b61182e565b915080825260208301602083018583830111156111e057600080fd5b6111eb838284611a83565b50505092915050565b600082601f83011261120557600080fd5b8151611218611213826118d7565b61182e565b9150808252602083016020830185838301111561123457600080fd5b61123f838284611a92565b50505092915050565b60008151905061125781611aed565b92915050565b60006020828403121561126f57600080fd5b600082013567ffffffffffffffff81111561128957600080fd5b611295848285016110a9565b91505092915050565b600080604083850312156112b157600080fd5b600083013567ffffffffffffffff8111156112cb57600080fd5b6112d7858286016110a9565b925050602083013567ffffffffffffffff8111156112f457600080fd5b6113008582860161112c565b9150509250929050565b60006020828403121561131c57600080fd5b600082013567ffffffffffffffff81111561133657600080fd5b611342848285016111a0565b91505092915050565b60006020828403121561135d57600080fd5b600082015167ffffffffffffffff81111561137757600080fd5b611383848285016111f4565b91505092915050565b60006020828403121561139e57600080fd5b60006113ac84828501611248565b91505092915050565b60006113c18383611564565b905092915050565b60006113d58383611620565b60208301905092915050565b60006113ed8383611699565b905092915050565b600061140183836116d2565b60208301905092915050565b61141681611a3b565b82525050565b600061142782611943565b61143181856119b9565b93508360208202850161144385611903565b8060005b8581101561147f578484038952815161146085826113b5565b945061146b83611985565b925060208a01995050600181019050611447565b50829750879550505050505092915050565b600061149c8261194e565b6114a681856119ca565b93506114b183611913565b8060005b838110156114e25781516114c988826113c9565b97506114d483611992565b9250506001810190506114b5565b5085935050505092915050565b60006114fa82611959565b61150481856119db565b93508360208202850161151685611923565b8060005b85811015611552578484038952815161153385826113e1565b945061153e8361199f565b925060208a0199505060018101905061151a565b50829750879550505050505092915050565b600061156f82611964565b61157981856119ec565b935061158483611933565b8060005b838110156115b557815161159c88826113f5565b97506115a7836119ac565b925050600181019050611588565b5085935050505092915050565b60006115cd82611964565b6115d781856119fd565b93506115e283611933565b8060005b838110156116135781516115fa88826113f5565b9750611605836119ac565b9250506001810190506115e6565b5085935050505092915050565b61162981611a4d565b82525050565b600061163a8261196f565b6116448185611a0e565b9350611654818560208601611a92565b61165d81611ac5565b840191505092915050565b60006116738261196f565b61167d8185611a1f565b935061168d818560208601611a92565b80840191505092915050565b60006116a48261197a565b6116ae8185611a2a565b93506116be818560208601611a92565b6116c781611ac5565b840191505092915050565b6116db81611a79565b82525050565b6116ea81611a79565b82525050565b60006116fc8284611668565b915081905092915050565b600060208201905061171c600083018461140d565b92915050565b6000602082019050818103600083015261173c818461141c565b905092915050565b6000602082019050818103600083015261175e8184611491565b905092915050565b600060c082019050818103600083015261178081896114ef565b9050818103602083015261179481886114ef565b905081810360408301526117a881876115c2565b905081810360608301526117bc8186611491565b905081810360808301526117d081856115c2565b905081810360a08301526117e48184611491565b9050979650505050505050565b6000602082019050818103600083015261180b818461162f565b905092915050565b600060208201905061182860008301846116e1565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561185157600080fd5b8060405250919050565b600067ffffffffffffffff82111561187257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561189a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156118c257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156118ee57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611a4682611a59565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ab0578082015181840152602081019050611a95565b83811115611abf576000848401525b50505050565b6000601f19601f8301169050919050565b611adf81611a3b565b8114611aea57600080fd5b50565b611af681611a79565b8114611b0157600080fd5b5056fea26469706673582212200cd3abdde91ccd2a9980616fd67dbe63bbc09ce076abf2016ea3e4488331d20064736f6c634300060c0033"
	TokenContractCaller  = common.HexToAddress("0x1992111111111111111111111111111111111110")
	TokenContractAddress = common.HexToAddress("0x1992111111111111111111111111111111111111")
)

type TokenContract struct {
	caller  common.Address
	address common.Address
	code    []byte
	abi     abi.ABI
}

func NewTokenContract() TokenContract {
	_abi, _ := abi.JSON(strings.NewReader(_jsondata))
	return TokenContract{
		caller:  TokenContractCaller,
		address: TokenContractAddress,
		code:    hexutil.MustDecode(_deployCode),
		abi:     _abi,
	}
}

func (tc *TokenContract) Override() *ethapi.StateOverrides {
	return &ethapi.StateOverrides{
		tc.address: ethapi.Account{
			Nonce:     nil,
			Code:      (*hexutility.Bytes)(&tc.code),
			Balance:   nil,
			State:     nil,
			StateDiff: nil,
		},
	}
}
